version: "3"
services:
  ###----------------- HARVESTER------------------------
  py-harvester:
    image: kingak/py-harvester
    build:
      context: ./py-harvester
      dockerfile: docker/App.dockerfile
    restart: always
    depends_on:
      - kafka
    environment:
      ALPHAVANTAGE_API_KEY: ${ALPHAVANTAGE_API_KEY}
      MAT_STOCK_TICKER_LIST: ${MAT_STOCK_TICKER_LIST}
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
    command: |
      -k "${ALPHAVANTAGE_API_KEY}"
      -s "${MAT_STOCK_TICKER_LIST}"
      -b "${KAFKA_BOOTSTRAP_SERVERS}"

  ### ----------------- KAFKA ---------------------------
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka:3.2
    ports:
      - "9092:9092"
      - "9093:9093"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      - ALLOW_PLAINTEXT_LISTENER=yes
      - BITNAMI_DEBUG=TRUE
      - KAFKA_ENABLE_KRAFT=no
    depends_on:
      - zookeeper
volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
